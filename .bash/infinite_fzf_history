#!/bin/bash

mkdir -p ~/.bash_history_dir

# Each shell gets it's own history file, but don't make a new one when we re-source the bashrc
if [[ ! "${HISTFILE}" == *'bash_history_dir'* ]]; then
    filename=$(date -u +%Y-%m-%d.%H.%M.%S)
    HISTFILE="${HOME}/.bash_history_dir/${filename}_$$"
    # Add something to the file so that it isn't empty
    echo \#$(date +%s) >> $HISTFILE
    echo 'source ~/.bashrc' >> $HISTFILE
fi

# Immediately update the history
shopt -s histappend
PROMPT_COMMAND="history -a;$PROMPT_COMMAND"

# Ignore entries with a leading space
HISTCONTROL=ignoreboth
# Add timestamps to the history
HISTTIMEFORMAT="%d/%m/%y %T "



fzf_history_preview="grep -B1 -xhFr {2..} ~/.bash_history_dir | grep '^#' | cut -d# -f2 | sort -nr | xargs -n1 -I[] date -d@[]"
# Search through all of the unique history files
terminal_fzf_history() {
    query_file=$1
    local fzf_ctrl_c_exit_code=130
    grep -hv ^\# $HISTFILE \
    | sort | uniq -c | sort -n \
    | $(__fzfcmd) --tac --tiebreak=index \
    --bind "ctrl-r:execute(echo 1 >> $query_file; echo {q} >> $query_file)+unix-line-discard+print-query" \
    --bind "ctrl-t:toggle-preview" \
    --preview "$fzf_history_preview" \
    --preview-window=right:28:hidden \
    --multi \
    | sed "s/ *[0-9]* *//" \
    | sed '$!s/$/;/'

    echo ${PIPESTATUS[@]} | grep -q " $fzf_ctrl_c_exit_code " && echo '##########'
}

global_fzf_history() {
    start_query="$1"

    grep -hrv ^\# $HOME/.bash_history_dir \
    | sort | uniq -c | sort -n \
    | $(__fzfcmd) --tac --tiebreak=index \
      --bind "ctrl-r:unix-line-discard+print-query" \
      --bind "ctrl-t:toggle-preview" \
      --preview "$fzf_history_preview" \
      --preview-window=right:28:hidden \
      --multi \
      --query "$start_query" \
    | sed "s/ *[0-9]* *//" \
    | sed '$!s/$/;/'
}

infinite_fzf_history() {
    exit_early_tempfile=$(mktemp)
    res=$(terminal_fzf_history $exit_early_tempfile)
    prev_query=$(cat $exit_early_tempfile)
    if [[ "$res" == '##########' ]]; then
        exit 1
    elif [[ "${prev_query}" != "" ]]; then
        query="$(cat $exit_early_tempfile | sed -n 2p)"
        res=$(global_fzf_history "$query")
    fi
    rm $exit_early_tempfile
    echo $res
}
